apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8srequirednonprivileged
  annotations:
    metadata.gatekeeper.sh/title: "No Privileged Containers"
    metadata.gatekeeper.sh/version: 1.0.0
    description: >-
      Prohibits the creation of privileged containers in a cluster.
      Privileged containers have access to all capabilities and devices on the host.
spec:
  crd:
    spec:
      names:
        kind: K8sRequiredNonPrivileged
      validation:
        type: object
        properties:
          exemptImages:
            description: >-
              List of image names that are exempt from this policy.
              Wildcards (*) are supported.
            type: array
            items:
              type: string
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8srequirednonprivileged
        
        import rego.v1
        
        violation[{"msg": msg}] if {
            container := input.review.object.spec.containers[_]
            container.securityContext.privileged
            not exempt_image(container.image)
            msg := sprintf("Privileged container is not allowed: %v", [container.name])
        }
        
        violation[{"msg": msg}] if {
            container := input.review.object.spec.initContainers[_]
            container.securityContext.privileged
            not exempt_image(container.image)
            msg := sprintf("Privileged init container is not allowed: %v", [container.name])
        }
        
        exempt_image(image) if {
            exempt_pattern := input.parameters.exemptImages[_]
            glob.match(exempt_pattern, [], image)
        }

---
apiVersion: config.gatekeeper.sh/v1alpha1
kind: K8sRequiredNonPrivileged
metadata:
  name: no-privileged-containers
  namespace: gatekeeper-system
spec:
  match:
    - excludedNamespaces: ["kube-system", "gatekeeper-system"]
      kinds:
        - apiGroups: [""]
          kinds: ["Pod"]
        - apiGroups: ["apps"]
          kinds: ["Deployment", "ReplicaSet", "DaemonSet", "StatefulSet"]
  parameters:
    exemptImages:
      - "registry.k8s.io/pause:*"
      - "k8s.gcr.io/pause:*"