apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: k8sblockhostnamespace
  annotations:
    metadata.gatekeeper.sh/title: "Block Host Namespace"
    metadata.gatekeeper.sh/version: 1.0.0
    description: >-
      Blocks pods from using the host's PID, IPC, or network namespace.
      This prevents containers from accessing host-level resources.
spec:
  crd:
    spec:
      names:
        kind: K8sBlockHostNamespace
      validation:
        type: object
        properties:
          hostNetwork:
            description: "Controls the use of host network namespace"
            type: boolean
          hostIPC:
            description: "Controls the use of host IPC namespace"
            type: boolean
          hostPID:
            description: "Controls the use of host PID namespace"
            type: boolean
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8sblockhostnamespace
        
        import rego.v1
        
        violation[{"msg": msg}] if {
            input.parameters.hostNetwork
            input.review.object.spec.hostNetwork
            msg := "Using hostNetwork is not allowed"
        }
        
        violation[{"msg": msg}] if {
            input.parameters.hostIPC
            input.review.object.spec.hostIPC
            msg := "Using hostIPC is not allowed"
        }
        
        violation[{"msg": msg}] if {
            input.parameters.hostPID
            input.review.object.spec.hostPID
            msg := "Using hostPID is not allowed"
        }

---
apiVersion: config.gatekeeper.sh/v1alpha1
kind: K8sBlockHostNamespace
metadata:
  name: block-host-namespace
  namespace: gatekeeper-system
spec:
  match:
    - excludedNamespaces: ["kube-system", "gatekeeper-system"]
      kinds:
        - apiGroups: [""]
          kinds: ["Pod"]
        - apiGroups: ["apps"]
          kinds: ["Deployment", "ReplicaSet", "DaemonSet", "StatefulSet"]
  parameters:
    hostNetwork: true
    hostIPC: true
    hostPID: true