{
  "frontend": {
    "untested_files": [
      "dashboard_ui_v2/src/App.tsx", 
      "dashboard_ui_v2/src/main.tsx", 
      "dashboard_ui_v2/src/test-setup.ts", 
      "dashboard_ui_v2/src/test-utils.tsx", 
      "dashboard_ui_v2/src/components/DiscoveryPanel.tsx", 
      "dashboard_ui_v2/src/components/analytics/ROIChart.tsx", 
      "dashboard_ui_v2/src/components/auth/LoginForm.tsx", 
      "dashboard_ui_v2/src/components/auth/RegisterForm.tsx", 
      "dashboard_ui_v2/src/components/dashboard/DashboardStatsCards.tsx", 
      "dashboard_ui_v2/src/components/dashboard/RecentWorkflowsTable.tsx"
    ], 
    "total_files": 51, 
    "test_files": [
      "dashboard_ui_v2/src/components/__tests__/button.test.tsx", 
      "dashboard_ui_v2/src/hooks/__tests__/useWebSocket.test.ts", 
      "dashboard_ui_v2/src/lib/__tests__/api.test.ts", 
      "dashboard_ui_v2/src/pages/__tests__/DashboardPage.test.tsx"
    ], 
    "coverage_percentage": 0.0, 
    "tested_files": 4
  }, 
  "timestamp": "2025-07-10T15:11:08.378865", 
  "integration": {
    "failed_tests": 0, 
    "passed_tests": 13, 
    "total_tests": 13, 
    "success_rate": 100.0
  }, 
  "recommendations": [
    {
      "category": "Backend Testing", 
      "priority": "High", 
      "description": "Increase backend test coverage to at least 70% (currently 0.0%)", 
      "action": "Add unit tests for 10 untested modules"
    }, 
    {
      "category": "Frontend Testing", 
      "priority": "High", 
      "description": "Increase frontend test coverage to at least 60% (currently 0.0%)", 
      "action": "Add component tests for React components"
    }, 
    {
      "category": "CI/CD", 
      "priority": "Medium", 
      "description": "Set up automated testing in CI/CD pipeline", 
      "action": "Configure GitHub Actions or similar CI system"
    }, 
    {
      "category": "Code Quality", 
      "priority": "Medium", 
      "description": "Add code quality checks and linting", 
      "action": "Configure ESLint, Prettier, and pre-commit hooks"
    }, 
    {
      "category": "Performance Testing", 
      "priority": "Low", 
      "description": "Add performance and load testing", 
      "action": "Implement Lighthouse CI and load testing with tools like Artillery"
    }
  ], 
  "overall_score": 33.33, 
  "backend": {
    "untested_files": [
      "ai_engine/approval_handler.py", 
      "ai_engine/dynamic_module_generator.py", 
      "ai_engine/main.py", 
      "ai_engine/metrics_instrumentation.py", 
      "ai_engine/rag_engine.py", 
      "ai_engine/scenario_executor.py", 
      "ai_engine/scenario_library.py", 
      "ai_engine/secure_dynamic_module_generator.py", 
      "ai_engine/tasks.py", 
      "ai_engine/task_detection.py"
    ], 
    "total_files": 60, 
    "test_files": [
      "tests/test_ai_learning_engine.py", 
      "tests/test_analysis.py", 
      "tests/test_analysis_simple.py", 
      "tests/test_auth_e2e.py", 
      "tests/test_autogenerated_units.py", 
      "tests/test_comprehensive_fixed.py", 
      "tests/test_comprehensive_units.py", 
      "tests/test_connectivity.py", 
      "tests/test_core_logic.py", 
      "tests/test_coverage_reporter.py", 
      "tests/test_database_models.py", 
      "tests/test_decision_engine.py", 
      "tests/test_dependency_fixes.py", 
      "tests/test_enhanced_runners.py", 
      "tests/test_frontend_components.py", 
      "tests/test_integration_suite.py", 
      "tests/test_phase2_intelligence.py", 
      "tests/test_runner_enhanced.py", 
      "tests/test_simple_units.py", 
      "tests/test_workflow_engine.py", 
      "tests/test_workflow_runners.py"
    ], 
    "coverage_percentage": 0.0, 
    "tested_files": 11
  }
}